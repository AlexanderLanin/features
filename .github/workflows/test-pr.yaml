name: "PR - Test Updated Features"
on:
  pull_request:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            plantuml: [./**/_common/**, ./**/plantuml/**]
            sphinx-needs: [./**/_common/**, ./**/sphinx-needs/**]
            hugo: [./**/_common/**, ./**/hugo/**]

  test-standard-base-images:
    needs: [detect-changes]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.detect-changes.outputs.features) }}
        baseImage:
          [
            "ubuntu:focal",
            "ubuntu:jammy",
            "ubuntu:bionic",
            "debian:11",
            "debian:10",
            "debian:9",
            "mcr.microsoft.com/devcontainers/base:ubuntu",
            "mcr.microsoft.com/devcontainers/base:debian",
            "alpine:3.14",
          ]
    steps:
      - uses: actions/checkout@v2

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test  --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    needs: [detect-changes]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.detect-changes.outputs.features) }}
    steps:
      - uses: actions/checkout@v2

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated  .